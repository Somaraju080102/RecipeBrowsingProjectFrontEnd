{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-sample\\\\src\\\\RecipeFrontend\\\\src\\\\RecipeCodeFrontend\\\\RecipeUserContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\n\n// Create the UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// UserProvider component to wrap the application\nexport function UserProvider({\n  children\n}) {\n  _s();\n  // User, email, and recipe state with localStorage persistence\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [userEmail, setUserEmail] = useState(() => {\n    const storedEmail = localStorage.getItem(\"userEmail\");\n    return storedEmail ? JSON.parse(storedEmail) : null;\n  });\n  const [recipeId, setRecipeId] = useState(() => {\n    const storedRecipeId = localStorage.getItem(\"recipeId\");\n    return storedRecipeId ? JSON.parse(storedRecipeId) : null;\n  });\n\n  // Store user in localStorage when the state changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n  }, [user]);\n\n  // Store userEmail in localStorage when the state changes\n  useEffect(() => {\n    if (userEmail) {\n      localStorage.setItem(\"userEmail\", JSON.stringify(userEmail));\n    } else {\n      localStorage.removeItem(\"userEmail\");\n    }\n  }, [userEmail]);\n\n  // Store recipeId in localStorage when the state changes\n  useEffect(() => {\n    if (recipeId) {\n      localStorage.setItem(\"recipeId\", JSON.stringify(recipeId));\n    } else {\n      localStorage.removeItem(\"recipeId\");\n    }\n  }, [recipeId]);\n\n  // Handle user login\n  const handleLogin = username => {\n    setUser({\n      name: username\n    });\n  };\n\n  // Handle user email\n  const handleEmail = useremail => {\n    setUserEmail({\n      email: useremail\n    });\n  };\n\n  // Handle recipe ID\n  const handleRecipeId = recipeid => {\n    setRecipeId({\n      id: recipeid\n    });\n  };\n\n  // Handle user logout\n  const handleLogout = () => {\n    setUser(null);\n    setUserEmail(null);\n    setRecipeId(null);\n    localStorage.clear(); // Clear everything from localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      handleLogin,\n      handleLogout,\n      userEmail,\n      handleEmail,\n      recipeId,\n      handleRecipeId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"ulxIeV1BCH5K2EQ/XbXEdnWshWI=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","userEmail","setUserEmail","storedEmail","recipeId","setRecipeId","storedRecipeId","setItem","stringify","removeItem","handleLogin","username","name","handleEmail","useremail","email","handleRecipeId","recipeid","id","handleLogout","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-sample/src/RecipeFrontend/src/RecipeCodeFrontend/RecipeUserContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create the UserContext\r\nexport const UserContext = createContext();\r\n\r\n// UserProvider component to wrap the application\r\nexport function UserProvider({ children }) {\r\n  // User, email, and recipe state with localStorage persistence\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const [userEmail, setUserEmail] = useState(() => {\r\n    const storedEmail = localStorage.getItem(\"userEmail\");\r\n    return storedEmail ? JSON.parse(storedEmail) : null;\r\n  });\r\n\r\n  const [recipeId, setRecipeId] = useState(() => {\r\n    const storedRecipeId = localStorage.getItem(\"recipeId\");\r\n    return storedRecipeId ? JSON.parse(storedRecipeId) : null;\r\n  });\r\n\r\n  // Store user in localStorage when the state changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }, [user]);\r\n\r\n  // Store userEmail in localStorage when the state changes\r\n  useEffect(() => {\r\n    if (userEmail) {\r\n      localStorage.setItem(\"userEmail\", JSON.stringify(userEmail));\r\n    } else {\r\n      localStorage.removeItem(\"userEmail\");\r\n    }\r\n  }, [userEmail]);\r\n\r\n  // Store recipeId in localStorage when the state changes\r\n  useEffect(() => {\r\n    if (recipeId) {\r\n      localStorage.setItem(\"recipeId\", JSON.stringify(recipeId));\r\n    } else {\r\n      localStorage.removeItem(\"recipeId\");\r\n    }\r\n  }, [recipeId]);\r\n\r\n  // Handle user login\r\n  const handleLogin = (username) => {\r\n    setUser({ name: username });\r\n  };\r\n\r\n  // Handle user email\r\n  const handleEmail = (useremail) => {\r\n    setUserEmail({ email: useremail });\r\n  };\r\n\r\n  // Handle recipe ID\r\n  const handleRecipeId = (recipeid) => {\r\n    setRecipeId({ id: recipeid });\r\n  };\r\n\r\n  // Handle user logout\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setUserEmail(null);\r\n    setRecipeId(null);\r\n    localStorage.clear(); // Clear everything from localStorage\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        handleLogin,\r\n        handleLogout,\r\n        userEmail,\r\n        handleEmail,\r\n        recipeId,\r\n        handleRecipeId,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}